name: Build Clients

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      fetch_openapi:
        description: "Whether to fetch openapi"
        required: true
        default: "false"
  repository_dispatch:
    types: [Integration-with-Automation]

run-name: ${{ github.actor }} triggered build clients ðŸš€

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-clients:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download OpenAPI file
        if: ${{ !(github.event.inputs.fetch_openapi == 'false') }}
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          workflow: read_openapi_schema.yaml
          repo: CompassLabs/dojo_api
          name: openapi-spec
          branch: main
      - name: Modify OpenAPI description
        if: ${{ !(github.event.inputs.fetch_openapi == 'false') }}
        run: |
          DESCRIPTION=$(cat description.md)
          jq --arg description "$DESCRIPTION" '.info.description = $description' openapi.json > temp_openapi.json && mv temp_openapi.json openapi.json

      - name: Check for openapi-spec changes
        if: ${{ !(github.event.inputs.fetch_openapi == 'false') }}
        id: check_changes
        run: |
          git fetch origin main
          if [ ! -n "$(git diff --name-status origin/main)" ]; then
            echo "No changes to openapi-spec, exiting early"
            exit 0
          fi

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          cd ./python_client 
          poetry install
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.3.0
      - name: "Setup jq"
        uses: dcarbone/install-jq-action@v3
        with:
          version: 1.7
          force: false

      ##############################################################################################

      - name: Build langchain-compass package
        run: |
          cd ./langchain-compass
          # increment the version by 1 prior to push
          poetry version patch
          NEXT_VERSION=$(poetry version --short)
          echo "NEXT_VERSION: $NEXT_VERSION"

          poetry build
          pwd
          ls -la ./
          ls -la dist/
      - name: Publish to PyPi
        #        continue-on-error: true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false
          packages-dir: langchain-compass/dist

      ##############################################################################################      - name: Commit clients
      - name: Commit Changes
        # always run, this way versions will always increment even if there is a failure
        if: always()
        run: |
          git config --global user.name 'Github Automation'
          git config --global user.email 'ollivanders@users.noreply.github.com'
          git add python_client ts_client openapi.json
          git status
          # [git diff-index] is used to only push if there are changes without failing the job
          git diff-index --cached --quiet HEAD || git commit -am "update: clients"
          git push
